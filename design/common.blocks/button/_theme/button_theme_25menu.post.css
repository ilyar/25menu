@use postcss-map {
  basePath: "./theme/";
  maps: ["fbs-cabinet.yml"]
}

block(button).mod(theme fbs-cabinet) {
  display: inline-flex;
  position: relative;
  z-index: 1;
  text-decoration: none;
  box-shadow: none;
  outline: none;
  line-height: 1.5;

  vertical-align: middle;
  color: map(fbs-cabinet, color, elephant_dark);
  background-color: map(fbs-cabinet, color, white);
  text-align: center;
  text-transform: uppercase;
  cursor: pointer;
  padding: 0 .25rem;
  box-sizing: border-box;

  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  &::-moz-focus-inner {
    padding: 0;
    border: 0
  }

  &:before {
    content: '';
    display: block;
    position: absolute;
    top: map(fbs-cabinet, line-1px);
    left: map(fbs-cabinet, line-1px);
    bottom: map(fbs-cabinet, line-1px);
    right: map(fbs-cabinet, line-1px);
    z-index: -1;
    background-color: transparent;
    border-radius: var(--border-radius, 0);
    box-shadow: 0 0 0 map(fbs-cabinet, line-1px) map(fbs-cabinet, color, elephant_dark);
  }

  .elem(text) {
    display        : inline-block;
    flex           : 1;
    font           : inherit;
    color          : inherit;
    line-height    : inherit;
    vertical-align : middle;
    text-align     : center;
    box-sizing     : border-box;
    margin         : 0;
    border         : 0;
    padding        : .25em .5em;
    overflow       : hidden;          /* Для текста, который всё же выходит за края */
  }

  block(icon) + block(button).elem(text) {
    text-align: left;
    padding-left: 0;
  }

  @each $size in (xs, s, m, l, xl, xxl) {
    .mod(size $(size)) {
      font-size: map(fbs-cabinet, font-size, $(size));
    }
  }

  .mod(vertical) {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    padding: 0;

    block(icon) {
      padding-bottom: 0;

      &:only-child {
        padding: .75rem;
      }

      & + block(button).elem(text) {
        text-align: center;
        padding-left: .375em;
      }
    }
  }

  .mod(inverse) {
    color: map(fbs-cabinet, color, white);
    background-color: map(fbs-cabinet, color, bermuda_light);

    &:before {
      background-color: map(fbs-cabinet, color, elephant_dark);
      box-shadow: none;
    }

    &.mod(focused) {
      background-color: map(fbs-cabinet, color, white);
      color: map(fbs-cabinet, color, black);
      box-shadow: inset 0 0 0 map(fbs-cabinet, line-1px) map(fbs-cabinet, color, white);


      &:before {
        background-color: map(fbs-cabinet, color, bermuda_dark);
      }
    }
  }

  .mod(view plain) {
    padding: 0;
    background-color: transparent;

    &:before {
      content: none;
    }
  }

  .mod(type link) .elem(text){
    color: map(fbs-cabinet, color, blue);
  }

  .mod(focused) {
    outline: none;
    box-shadow: inset 0 0 0 map(fbs-cabinet, line-1px) map(fbs-cabinet, color, yellow);

    &:before {
      background-color: map(fbs-cabinet, color, black_transparent_30);
    }
  }

  .mod(active) {
    &:before {
      background-color: map(fbs-cabinet, color, black);
    }
  }

  .mod(checked) {
    background-color: map(fbs-cabinet, color, blue_light);
  }

  .mod(togglable radio) {
    &:before {
      box-shadow: none;
    }
  }

  @each $name, $color in
    (facebook, twitter,    live,   yahoo, google-plus, vkontakte,  yandex,    line,   weibo),
    ( #3b5998, #55acee, #00a1f1, #410093,     #dc4e41,   #45668e, #ffcc00, #00c300, #e71d34) {
    .mod(social $(name)) {
      padding: 0;
      text-align: left;

      &:before {
        content: '';
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background-color: $color;
        box-shadow: 0 0 0 1px transparent;
      }

      .elem(text) {
        padding-left: .5em;
        color: #fff;
      }

      block(icon) {
        border-right: map(fbs-cabinet, line-1px) solid map(fbs-cabinet, color, elephant_light);
      }
    }
  }
}
